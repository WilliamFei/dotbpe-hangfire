// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: taskproducer_1000.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Hangfire.Producer {

  /// <summary>Holder for reflection information generated from taskproducer_1000.proto</summary>
  public static partial class Taskproducer1000Reflection {

    #region Descriptor
    /// <summary>File descriptor for taskproducer_1000.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Taskproducer1000Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chd0YXNrcHJvZHVjZXJfMTAwMC5wcm90bxIGZG90YnBlGhNkb3RicGVfb3B0",
            "aW9uLnByb3RvImsKCkVucXVldWVSZXESEQoJY2xpZW50X2lwGAEgASgJEhQK",
            "DHhfcmVxdWVzdF9pZBgDIAEoCRISCgpzZXJ2aWNlX2lkGAogASgFEhIKCm1l",
            "c3NhZ2VfaWQYCyABKAUSDAoEZGF0YRgMIAEoCSJ7CgtTY2hlZHVsZVJlcRIR",
            "CgljbGllbnRfaXAYASABKAkSFAoMeF9yZXF1ZXN0X2lkGAMgASgJEhIKCnNl",
            "cnZpY2VfaWQYCiABKAUSEgoKbWVzc2FnZV9pZBgLIAEoBRINCgVkZWxheRgM",
            "IAEoBRIMCgRkYXRhGA0gASgJIlEKCUNvbW1vblJlcRIOCgZqb2JfaWQYASAB",
            "KAkSEgoKc2VydmljZV9pZBgKIAEoBRISCgptZXNzYWdlX2lkGAsgASgFEgwK",
            "BGRhdGEYDCABKAkiIQoHVm9pZFJlcxIWCg5yZXR1cm5fbWVzc2FnZRgBIAEo",
            "CTKPAwoTVGFza1Byb2R1Y2VyU2VydmljZRJeCgdFbnF1ZXVlEhIuZG90YnBl",
            "LkVucXVldWVSZXEaDy5kb3RicGUuVm9pZFJlcyIu0PMYAdrzGCYKES9hcGkv",
            "dGFzay9lbnF1ZXVlEgNhbGwaDOmYn+WIl+S7u+WKoRJ2CghTY2hlZHVsZRIT",
            "LmRvdGJwZS5TY2hlZHVsZVJlcRoPLmRvdGJwZS5Wb2lkUmVzIkTQ8xgC2vMY",
            "PAoSL2FwaS90YXNrL3NjaGVkdWxlEgNhbGwaIeW7tui/n+S7u+WKoe+8jOW7",
            "tui/n+WNleS9jeWIhumSnxKYAQoOU2NoZWR1bGVTZWNvbmQSEy5kb3RicGUu",
            "U2NoZWR1bGVSZXEaDy5kb3RicGUuVm9pZFJlcyJg0PMYA9rzGFgKGS9hcGkv",
            "dGFzay9zY2hlZHVsZS9zZWNvbmQSA2FsbBo25bu26L+f5Lu75Yqh77yM5bu2",
            "6L+f5Y2V5L2N5Li656eS77yM5YW25a6e5piv5LiN5YeG55qEGgXI8xjoB0Ie",
            "SAGqAhFIYW5nZmlyZS5Qcm9kdWNlcvDzGAH48xgBUABiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::DotBPE.Protobuf.DotbpeOptionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Hangfire.Producer.EnqueueReq), global::Hangfire.Producer.EnqueueReq.Parser, new[]{ "ClientIp", "XRequestId", "ServiceId", "MessageId", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hangfire.Producer.ScheduleReq), global::Hangfire.Producer.ScheduleReq.Parser, new[]{ "ClientIp", "XRequestId", "ServiceId", "MessageId", "Delay", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hangfire.Producer.CommonReq), global::Hangfire.Producer.CommonReq.Parser, new[]{ "JobId", "ServiceId", "MessageId", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Hangfire.Producer.VoidRes), global::Hangfire.Producer.VoidRes.Parser, new[]{ "ReturnMessage" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EnqueueReq : pb::IMessage<EnqueueReq> {
    private static readonly pb::MessageParser<EnqueueReq> _parser = new pb::MessageParser<EnqueueReq>(() => new EnqueueReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnqueueReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hangfire.Producer.Taskproducer1000Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnqueueReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnqueueReq(EnqueueReq other) : this() {
      clientIp_ = other.clientIp_;
      xRequestId_ = other.xRequestId_;
      serviceId_ = other.serviceId_;
      messageId_ = other.messageId_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnqueueReq Clone() {
      return new EnqueueReq(this);
    }

    /// <summary>Field number for the "client_ip" field.</summary>
    public const int ClientIpFieldNumber = 1;
    private string clientIp_ = "";
    /// <summary>
    ///用户端IP  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x_request_id" field.</summary>
    public const int XRequestIdFieldNumber = 3;
    private string xRequestId_ = "";
    /// <summary>
    ///请求的唯一标识，用于服务间传递
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XRequestId {
      get { return xRequestId_; }
      set {
        xRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_id" field.</summary>
    public const int ServiceIdFieldNumber = 10;
    private int serviceId_;
    /// <summary>
    /// 服务ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 11;
    private int messageId_;
    /// <summary>
    /// 消息ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 12;
    private string data_ = "";
    /// <summary>
    ///数据JSON 应该尽量少的传递数据，必要时可以传递ID，在实际执行是去获取数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnqueueReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnqueueReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientIp != other.ClientIp) return false;
      if (XRequestId != other.XRequestId) return false;
      if (ServiceId != other.ServiceId) return false;
      if (MessageId != other.MessageId) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
      if (XRequestId.Length != 0) hash ^= XRequestId.GetHashCode();
      if (ServiceId != 0) hash ^= ServiceId.GetHashCode();
      if (MessageId != 0) hash ^= MessageId.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientIp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientIp);
      }
      if (XRequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(XRequestId);
      }
      if (ServiceId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ServiceId);
      }
      if (MessageId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MessageId);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIp);
      }
      if (XRequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XRequestId);
      }
      if (ServiceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServiceId);
      }
      if (MessageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageId);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnqueueReq other) {
      if (other == null) {
        return;
      }
      if (other.ClientIp.Length != 0) {
        ClientIp = other.ClientIp;
      }
      if (other.XRequestId.Length != 0) {
        XRequestId = other.XRequestId;
      }
      if (other.ServiceId != 0) {
        ServiceId = other.ServiceId;
      }
      if (other.MessageId != 0) {
        MessageId = other.MessageId;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientIp = input.ReadString();
            break;
          }
          case 26: {
            XRequestId = input.ReadString();
            break;
          }
          case 80: {
            ServiceId = input.ReadInt32();
            break;
          }
          case 88: {
            MessageId = input.ReadInt32();
            break;
          }
          case 98: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ScheduleReq : pb::IMessage<ScheduleReq> {
    private static readonly pb::MessageParser<ScheduleReq> _parser = new pb::MessageParser<ScheduleReq>(() => new ScheduleReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScheduleReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hangfire.Producer.Taskproducer1000Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleReq(ScheduleReq other) : this() {
      clientIp_ = other.clientIp_;
      xRequestId_ = other.xRequestId_;
      serviceId_ = other.serviceId_;
      messageId_ = other.messageId_;
      delay_ = other.delay_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleReq Clone() {
      return new ScheduleReq(this);
    }

    /// <summary>Field number for the "client_ip" field.</summary>
    public const int ClientIpFieldNumber = 1;
    private string clientIp_ = "";
    /// <summary>
    ///用户端IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x_request_id" field.</summary>
    public const int XRequestIdFieldNumber = 3;
    private string xRequestId_ = "";
    /// <summary>
    ///请求的唯一标识，用于服务间传递
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XRequestId {
      get { return xRequestId_; }
      set {
        xRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_id" field.</summary>
    public const int ServiceIdFieldNumber = 10;
    private int serviceId_;
    /// <summary>
    /// 服务ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 11;
    private int messageId_;
    /// <summary>
    /// 消息ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 12;
    private int delay_;
    /// <summary>
    ///延迟的单位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 13;
    private string data_ = "";
    /// <summary>
    ///数据JSON 应该尽量少的传递数据，必要时可以传递ID，在实际执行是去获取数据   
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScheduleReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScheduleReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientIp != other.ClientIp) return false;
      if (XRequestId != other.XRequestId) return false;
      if (ServiceId != other.ServiceId) return false;
      if (MessageId != other.MessageId) return false;
      if (Delay != other.Delay) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
      if (XRequestId.Length != 0) hash ^= XRequestId.GetHashCode();
      if (ServiceId != 0) hash ^= ServiceId.GetHashCode();
      if (MessageId != 0) hash ^= MessageId.GetHashCode();
      if (Delay != 0) hash ^= Delay.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientIp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientIp);
      }
      if (XRequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(XRequestId);
      }
      if (ServiceId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ServiceId);
      }
      if (MessageId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MessageId);
      }
      if (Delay != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Delay);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIp);
      }
      if (XRequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XRequestId);
      }
      if (ServiceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServiceId);
      }
      if (MessageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageId);
      }
      if (Delay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Delay);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScheduleReq other) {
      if (other == null) {
        return;
      }
      if (other.ClientIp.Length != 0) {
        ClientIp = other.ClientIp;
      }
      if (other.XRequestId.Length != 0) {
        XRequestId = other.XRequestId;
      }
      if (other.ServiceId != 0) {
        ServiceId = other.ServiceId;
      }
      if (other.MessageId != 0) {
        MessageId = other.MessageId;
      }
      if (other.Delay != 0) {
        Delay = other.Delay;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientIp = input.ReadString();
            break;
          }
          case 26: {
            XRequestId = input.ReadString();
            break;
          }
          case 80: {
            ServiceId = input.ReadInt32();
            break;
          }
          case 88: {
            MessageId = input.ReadInt32();
            break;
          }
          case 96: {
            Delay = input.ReadInt32();
            break;
          }
          case 106: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommonReq : pb::IMessage<CommonReq> {
    private static readonly pb::MessageParser<CommonReq> _parser = new pb::MessageParser<CommonReq>(() => new CommonReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommonReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hangfire.Producer.Taskproducer1000Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonReq(CommonReq other) : this() {
      jobId_ = other.jobId_;
      serviceId_ = other.serviceId_;
      messageId_ = other.messageId_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonReq Clone() {
      return new CommonReq(this);
    }

    /// <summary>Field number for the "job_id" field.</summary>
    public const int JobIdFieldNumber = 1;
    private string jobId_ = "";
    /// <summary>
    ///任务ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_id" field.</summary>
    public const int ServiceIdFieldNumber = 10;
    private int serviceId_;
    /// <summary>
    /// 服务ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 11;
    private int messageId_;
    /// <summary>
    /// 消息ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 12;
    private string data_ = "";
    /// <summary>
    ///数据JSON 应该尽量少的传递数据，必要时可以传递ID，在实际执行是去获取数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommonReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommonReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobId != other.JobId) return false;
      if (ServiceId != other.ServiceId) return false;
      if (MessageId != other.MessageId) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (ServiceId != 0) hash ^= ServiceId.GetHashCode();
      if (MessageId != 0) hash ^= MessageId.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JobId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JobId);
      }
      if (ServiceId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ServiceId);
      }
      if (MessageId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MessageId);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobId);
      }
      if (ServiceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServiceId);
      }
      if (MessageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageId);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommonReq other) {
      if (other == null) {
        return;
      }
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      if (other.ServiceId != 0) {
        ServiceId = other.ServiceId;
      }
      if (other.MessageId != 0) {
        MessageId = other.MessageId;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JobId = input.ReadString();
            break;
          }
          case 80: {
            ServiceId = input.ReadInt32();
            break;
          }
          case 88: {
            MessageId = input.ReadInt32();
            break;
          }
          case 98: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VoidRes : pb::IMessage<VoidRes> {
    private static readonly pb::MessageParser<VoidRes> _parser = new pb::MessageParser<VoidRes>(() => new VoidRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoidRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Hangfire.Producer.Taskproducer1000Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidRes(VoidRes other) : this() {
      returnMessage_ = other.returnMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidRes Clone() {
      return new VoidRes(this);
    }

    /// <summary>Field number for the "return_message" field.</summary>
    public const int ReturnMessageFieldNumber = 1;
    private string returnMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReturnMessage {
      get { return returnMessage_; }
      set {
        returnMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoidRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoidRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnMessage != other.ReturnMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnMessage.Length != 0) hash ^= ReturnMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReturnMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReturnMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoidRes other) {
      if (other == null) {
        return;
      }
      if (other.ReturnMessage.Length != 0) {
        ReturnMessage = other.ReturnMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReturnMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
